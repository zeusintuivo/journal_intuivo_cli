#!/bin/bash
# package:journal_cli
# @author Zeus Intuivo <zeus@intuivo.com>
#
[[ -z "${FOUND_DIR_JOURNAL}" ]] && . journal_find_journal_dir
. $FOUND_DIR_JOURNAL/journal_get_bash_colors
. $FOUND_DIR_JOURNAL/journal_get_journal_config
. $FOUND_DIR_JOURNAL/journal_get_current_branch
. $FOUND_DIR_JOURNAL/journal_get_ticketid

THISSCRIPTNAME=`basename "$0"`
THINKING_MACHINE=0

if [[ ! -z "$1"  ]] && ( [[ "$1" == "-h"  ]] || [[ "$1" == "-?"  ]] || [[ "$1" == "help"  ]] ) ; then
echo -e "
describe - Adds a description to the branch using command:   git branch --edit-description """${CURBRANCH}"""

USAGE:
  - 0 arguments        \" ${THISSCRIPTNAME} \"
       Called with no arguments will give you the current description

  - 1 argument
       1st Description  \"describe \"new feature for seo changes\"\"

  - 1 2 3 arguments   \"describe \"The fixed of REST api patch\" from master
       1st Description
       2rd fixed:from
       3rd BaseBranch  (Branch to use diff against in journal add files. which will
            be added at the end of the description like
            this: from master _BASEBRANCH_  ... here master is the basebranch)
"
  exit 0
fi

if [ ! -d .git ] ;  then
{
    echo -e "${red} Looks like a wrong folder. Missing .git directory. This script is intended to be ran from root of Git project, with .git directory in it.${reset}
    You are in $(pwd) now
    And I see no .git directory
    "
    exit 1;
}
fi

obtain_description() {
  local full_description

  (( THINKING_MACHINE )) && echo -e "${blue23} - Branch description: - ${reset}"
  full_description=$(git config branch.${CURBRANCH}.description)                           # try git config description

  (( THINKING_MACHINE )) && echo -e "${blue23} - First I think  full_description: ${reset}$full_description"
  if [[ -z "${full_description}" ]]  && [ -f .description ] ; then                          # try cat .description
    # Saved on .description?
    (( THINKING_MACHINE )) && echo -e "${blue23} - I think this is empty, and I see a .description file, so am testing for .description file ${reset}"

    full_description=$(<.description);
  fi
                                                                                            # did we get any ?
                                                                                            # +-- Yes
                                                                                            #   +-- check if branch or ticket is metioned
                                                                                            #       in the description
                                                                                            #       Are they mentioǹed?
                                                                                            #      +-- Yes
                                                                                            #         +--- Provide this description
                                                                                            #      +-- No
                                                                                            #         +--- then say empty
                                                                                            #
                                                                                            # +-- No
                                                                                            #   +-- then say empty
  (( THINKING_MACHINE )) && echo -e "${blue23} - Now I think full_description is: ${reset}$full_description"
  if [[ ! -z "${full_description}" ]] ; then
  {
    (( THINKING_MACHINE )) && echo -e "${blue23} - I think this has something ${reset}"
    if [[ ! -z "${CURBRANCH}" && "${full_description}" == *"${CURBRANCH}"* ]] ||  [[  ! -z "${TICKETID}" &&  "${full_description}" == *"${TICKETID}"* ]] ; then
    {
      (( THINKING_MACHINE )) && echo -e "${blue23} - and the description I found contains a reference to the branch name:${CURBRANCH} or ticket:${TICKETID} name. SEEMSLY ${reset} CORRECT  "
      echo "${full_description}"
    }
    else
    {
      echo -e ""
      (( THINKING_MACHINE )) && echo -e "${blue23} - but the description ${red}does not contain ${blue23}a reference to the branch name:${CURBRANCH} or ticket:${TICKETID} name. so I think it is incorrect ${reset}"
    }
    fi
  }
  fi
  echo -e ""
  (( THINKING_MACHINE )) && echo -e "${blue23} - Branch description end - ${reset}"

} # end function obtain_description



# if argument was not passed
if [[ -z "$1"  ]] ; then
{
  DESCRIPTION=$(obtain_description)
  if [[ -z "${DESCRIPTION}"  ]] ; then
  {
    echo -e ""
    (( THINKING_MACHINE )) && echo -e "${blue30} - empty - ${reset}"
  }
  else
  {
    echo -e """${DESCRIPTION}"""
  }
  fi
  exit 0;
}
fi

# Argument was passed then this will continue                                          # I passed an argument description
                                                                                       # sample "describe new stuff to describe "

. $FOUND_DIR_JOURNAL/journal_get_target_branch

echo -e "${blue23} • ${blue30} Prepare new Description Entry ${GRAY241}"
. $FOUND_DIR_JOURNAL/journal_get_ticketid

DESCRIPTION=""
if [[ ! -z "$1"  ]] ; then
	# show all branches
    DESCRIPTION="$1"

fi


. $FOUND_DIR_JOURNAL/journal_get_sed_functions

JOURNALDIR=$(echo "${TICKETID}_${DESCRIPTION}"  | convert_to_underdash )

. $FOUND_DIR_JOURNAL/journal_get_project_name
. $FOUND_DIR_JOURNAL/journal_get_current_branch

	CURRENTDATE=`date +%Y%m%d`

. $FOUND_DIR_JOURNAL/journal_get_journalentry_template
. $FOUND_DIR_JOURNAL/journal_get_description_one_liner_construct

# :)
