#!/bin/bash #dependency
# package:journal_cli
# @author Zeus Intuivo <zeus@intuivo.com>
# journal_get_target_branch
. $FOUND_DIR_JOURNAL/journal_get_current_branch
. $FOUND_DIR_JOURNAL/journal_get_branch_merge_against

#
# TARGETBASEBRANCH   - Get branch Branch from where it spawns  start
#
    msg_bullet "Get branch Branch from where it spawns  ${reset}"
    TARGETBASEBRANCH="$BRANCH_MERGE_AGAINST";
    SAMEBRANCH="NO";


# Function to check if a branch name is provided and set TARGETBASEBRANCH
check_and_set_branch() {
  local arg_from=$1
  local arg_branch=$2

  if [[ "$arg_from" == "from" ]]; then
    if [[ -z "$arg_branch" ]]; then
      msg_red "You must provide a branch name ${reset}"
      exit 1
    else
      TARGETBASEBRANCH="$arg_branch"
      if [[ "$TARGETBASEBRANCH" == "$CURBRANCH" ]]; then
        SAMEBRANCH="YES"
      fi
    fi
  fi
}

# Iterate through arguments
for (( i=1; i<=$#; i++ )); do
  next_arg=$((i+1))
  check_and_set_branch "${!i}" "${!next_arg}"
done

# Check if a branch name was never provided
if [[ -z "$TARGETBASEBRANCH" ]]; then
  msg_red "You must provide a branch name ${reset}"
  #exit 1
fi


  msg_quote "target branch against|${TARGETBASEBRANCH}";

#
# TARGETBASEBRANCH   - end
#